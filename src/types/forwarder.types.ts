import { AutoGeneratedField, SearchParams, SimpleResponse, PaginatedResponse } from './common';
import { Status } from '../constants/status';

export type ForwarderFormData = {
  fwBankName: string;
  bankAccount: string;
  description: string;
  region: string;
  transportName: string;
  code: string;
  forwarderNameVn: string;
  forwarderNameEn: string;
  taxCode?: string;
  address: string;
  status?: Status;
};

export type TForwarder = AutoGeneratedField &
  ForwarderFormData & {
    banks?: TForwarderBank[];
  };

export type Forwarder = TForwarder;

// Forwarder response types sử dụng TForwarder entity
export type ForwarderSimpleResponse = SimpleResponse<TForwarder>;
export type ForwarderPaginatedResponse = PaginatedResponse<TForwarder>;

export type TForwarderFilter = SearchParams<ForwarderFormData>;

export interface TForwarderBank {
  id?: number;
  code: string;
  name: string;
  fullName: string;
  swiftCode: string | null;
  bankCode: string;
  branchName: string;
  branchCode: string | null;
  address: string;
  phone: string | null;
  email: string | null;
  website: string | null;
  country: string | null;
  city: string | null;
  currency: string;
  isDefault: number; // 1 for default, 0 for non-default
  refType: string;
  refId: number;
}

export interface TForwarderResponse {
  data: TForwarder[];
  meta: {
    message: string;
    total?: number;
    page?: number;
    limit?: number;
  };
}

export interface TForwarderRequest extends ForwarderFormData {
  banks?: TForwarderBank[];
}

export type TForwarderStatus = 'active' | 'inactive' | 'all';
