export type SortField<T> = {
  field: keyof T;
  direction: 'asc' | 'desc';
};

export type FieldType =
  | 'text'
  | 'password'
  | 'email'
  | 'select'
  | 'number'
  | 'boolean'
  | 'date'
  | 'datetime-local'
  | 'time'
  | 'textarea'
  | 'file'
  | 'checkbox'
  | 'radio'
  | 'url'
  | 'tel'
  | 'range'
  | 'color'
  | 'multiselect'
  | 'custom';

export type AutoGeneratedField<T = number> = {
  id: T;
  createdAt: string;
  lastUpdatedAt: string | null;
  createdBy: number;
  lastUpdatedBy: number;
  lastProgramUpdate: string;
  code: string;
  status: number;
};

export interface SearchParams<T> {
  page?: number;
  size?: number;
  sortFields?: SortField<T>[];
  searchKey?: string;
  [key: string]: any;
}

export interface SimpleMeta {
  message: string;
}

export interface PaginatedMeta {
  page: number;
  size: number;
  total: number;
  totalPages: number;
  canNext: boolean;
  canPrevious: boolean;
  message?: string;
}

export interface SimpleResponse<T> {
  data: T[];
  meta: SimpleMeta;
}

// Generic response wrapper for paginated responses
export interface PaginatedResponse<T> {
  data: T[];
  meta: PaginatedMeta;
}

// Legacy response interfaces (keep for backward compatibility)
export interface Response<T> {
  total: number;
  page: number;
  size: number;
  data: T[];
}

export type SelectionOption<T = DynamicObject> = {
  label: string;
  value: string | number;
  disabled?: boolean;
  metadata?: T;
};
